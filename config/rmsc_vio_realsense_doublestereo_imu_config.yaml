%YAML:1.0

imu: 1         
num_of_cam: 2  
double_cam: 1  #双相机：1
is_stereo: 1


imu_topic: "/mavros/imu/data_raw"
image0_topic: "/camera1/infra1/image_rect_raw"
image1_topic: "/camera1/infra2/image_rect_raw"

1image0_topic: "/camera2/infra1/image_rect_raw"
1image1_topic: "/camera2/infra2/image_rect_raw"

output_path: "/home/xu/output"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"


image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic1: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

estimate_extrinsic: 1 
1body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -1.6185046150517302e-02, 2.6215307571838542e-02,
       -9.9952528828940590e-01, -1.0080179698144490e-01,
       9.9984390546145829e-01, -6.6599815769805559e-03,
       -1.6364881819712573e-02, 1.9605719855420624e-03,
       -7.0858304160139607e-03, -9.9963413421826908e-01,
       -2.6103423396315328e-02, -8.4004013980691947e-02, 0., 0., 0., 1. ]
1body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -1.8694538521354387e-02, 2.8179935644147835e-02,
       -9.9942803915868095e-01, -1.0292204482693217e-01,
       9.9980003193766831e-01, -3.5715560202883605e-02,
       -1.8886788740020921e-02, 5.0142470511036631e-02,
       -7.1000258387963755e-03, -9.9958126526989510e-01,
       -2.8051448349854180e-02, -8.4672458587531696e-02, 0., 0., 0., 1. ]
       
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.8018392865288844e-02, 2.4471086609475223e-02,
       9.9930782823982622e-01, 7.5808702009880602e-02,
       -9.9933515920600424e-01, 2.4016183530991553e-02,
       2.7431049985665978e-02, 1.4248974260959647e-02,
       -2.3328292606976386e-02, -9.9941202156505882e-01,
       2.5127712098119925e-02, -6.0716390795115358e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ 2.8717420009890082e-02, 2.5153105566166900e-02,
       9.9927104985001569e-01, 7.4643699439718339e-02,
       -9.9931847158278675e-01, 2.3917375519785011e-02,
       2.8116747708228307e-02, -3.5873973001997336e-02,
       -2.3192717422030162e-02, -9.9939745868629393e-01,
       2.5822808328278546e-02, -6.1287622042819664e-02, 0., 0., 0., 1. ]
multiple_thread: 1

#feature traker paprameters
max_cnt:  200           # max feature number in feature tracking 
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
acc_n: 0.5  # accelerometer measurement noise standard deviation. 
gyr_n: 0.3  # gyroscope measurement noise standard deviation.     
acc_w: 0.002   # accelerometer bias random work noise standard deviation.  
gyr_w: 0.002   # gyroscope bias random work noise standard deviation.    
g_norm: 9.805         # gravity magnitude


#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.017                            # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/xu/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
